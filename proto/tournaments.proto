syntax = "proto3";

package tournaments;

import "keys.proto";
import "stages.proto";
import "utils.proto";

enum Mode {
  OSU = 0;
  TAIKO = 1;
  CATCH_THE_BEAT = 2;
  MANIA = 3;
}

// Represents a tournament
message Tournament {
  keys.TournamentKey key = 1;
  // The full name of the tournament, e.g. "Osu World Cup 2023"
  string name = 2;
  // The short name of the tournament, e.g. "OWC23"
  string shorthand = 3;
  // The tournament format
  uint32 format = 4;
  // Whether this tournament has BWS or not
  bool bws = 5;
  // This tournament's mode
  Mode mode = 6;
  // The start date of this tournament
  optional utils.DateMillis start_date = 7;
  // The end date of this tournament
  optional utils.DateMillis end_date = 8;
  // This tournament's banner
  optional bytes banner = 9;
}

message RankRange {
  uint32 min = 1;
  uint32 max = 2;
}

message Country {
  string country_code = 1;
}

message RangeList {
  repeated RankRange ranges = 1;
}

message CountryList {
  repeated Country countries = 1;
}


service TournamentService {
  rpc GetAll(GetAllTournamentsRequest) returns (stream GetAllTournamentsResponse);
  rpc Get(GetTournamentRequest) returns (GetTournamentResponse);
  rpc Create(CreateTournamentRequest) returns (CreateTournamentResponse);
  rpc Update(UpdateTournamentRequest) returns (UpdateTournamentResponse);
  rpc Delete(DeleteTournamentRequest) returns (DeleteTournamentResponse);
}

message GetAllTournamentsRequest {}

message GetAllTournamentsResponse {
  Tournament tournament = 1; 
  RangeList rank_restrictions = 2;
  CountryList country_restrictions = 3;
}

message GetTournamentRequest {
  keys.TournamentKey key = 1;
}

message GetTournamentResponse {
  Tournament tournament = 1;
  RangeList rank_restrictions = 2;
  CountryList country_restrictions = 3;
  repeated stages.Stage stages = 4;
}

message CreateTournamentRequest {
  Tournament tournament = 1;
  RangeList rank_restrictions = 2;
  CountryList country_restrictions = 3;
}

message CreateTournamentResponse {
  keys.TournamentKey key = 1;
}

message UpdateTournamentRequest {
  keys.TournamentKey key = 1;
  optional string name = 2;
  optional string shorthand = 3;
  optional uint32 format = 4;
  optional bool bws = 5;
  optional RangeList rank_restrictions = 6;
  optional CountryList country_restrictions = 7;
}

message UpdateTournamentResponse {}

message DeleteTournamentRequest {
  keys.TournamentKey key = 1;
}

message DeleteTournamentResponse {}




