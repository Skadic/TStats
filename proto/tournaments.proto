syntax = "proto3";

package tournaments;

import "keys.proto";
import "stages.proto";


message Tournament {
  keys.TournamentKey key = 1;
  string name = 2;
  string shorthand = 3;
  uint32 format = 4;
  bool bws = 5;
}

message RankRange {
  uint32 min = 1;
  uint32 max = 2;
}

message Country {
  string name = 1;
}


service TournamentService {
  rpc GetAll(GetAllTournamentsRequest) returns (stream GetAllTournamentsResponse);
  rpc Get(GetTournamentRequest) returns (GetTournamentResponse);
  rpc Create(CreateTournamentRequest) returns (CreateTournamentResponse);
  rpc Update(UpdateTournamentRequest) returns (UpdateTournamentResponse);
  rpc Delete(DeleteTournamentRequest) returns (DeleteTournamentResponse);
}

message GetAllTournamentsRequest {}

message GetAllTournamentsResponse {
  Tournament tournament = 1; 
  repeated RankRange rank_restrictions = 2;
  repeated Country country_restrictions = 3;
}

message GetTournamentRequest {
  keys.TournamentKey key = 1;
}

message GetTournamentResponse {
  Tournament tournament = 1;
  repeated RankRange rank_restrictions = 2;
  repeated Country country_restrictions = 3;
  repeated stages.Stage stages = 4;
}

message CreateTournamentRequest {
  string name = 1;
  string shorthand = 2;
  uint32 format = 3;
  bool bws = 4;
  repeated RankRange rank_restrictions = 5;
  repeated Country country_restrictions = 6;
}

message CreateTournamentResponse {
  keys.TournamentKey key = 1;
}

message UpdateTournamentRequest {
  message RangeList {
    repeated RankRange ranges = 1;
  }

  message CountryList {
    repeated Country countries = 1;
  }

  keys.TournamentKey key = 1;
  optional string name = 2;
  optional string shorthand = 3;
  optional uint32 format = 4;
  optional bool bws = 5;
  optional RangeList rank_restrictions = 6;
  optional CountryList country_restrictions = 7;
}

message UpdateTournamentResponse {}

message DeleteTournamentRequest {
  keys.TournamentKey key = 1;
}

message DeleteTournamentResponse {}




