//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "pool_map")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub tournament_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub stage_order: i16,
    #[sea_orm(primary_key, auto_increment = false)]
    pub bracket_order: i16,
    #[sea_orm(primary_key, auto_increment = false)]
    pub map_order: i16,
    pub map_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::pool_bracket::Entity",
        from = "(Column::TournamentId, Column::StageOrder, Column::BracketOrder)",
        to = "(super::pool_bracket::Column::TournamentId, super::pool_bracket::Column::StageOrder, super::pool_bracket::Column::BracketOrder)",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    PoolBracket,
}

impl Related<super::pool_bracket::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PoolBracket.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
